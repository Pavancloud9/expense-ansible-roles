- name: disable current nodejs
  ansible.builtin.command: dnf module disable nodejs -y

- name: enable nodejs 20
  ansible.builtin.command: dnf module enable nodejs:20 -y

- name: install nodejs
  ansible.builtin.dnf:
    name: "{{ item }}"
    state: present
  loop:
  - nodejs
  - mysql

- name: create expense user
  ansible.builtin.user:
    name: expense

- name: create /app directory
  ansible.builtin.file:
    path: /app
    state: directory

- name: download application code
  ansible.builtin.get_url:
    url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
    dest: /tmp/backend.zip

- name: unzip backend/application code
  ansible.builtin.unarchive:
    src: /tmp/backend.zip
    dest: /app
    remote_src: yes

- name: install dependencies
  community.general.npm:
    path: /app

- name: copy service file
  ansible.builtin.copy:
    src: backend.service
    dest: /etc/systemd/system/backend.service

- name: install python libraries
  ansible.builtin.pip:
    name: "{{ item }}"
    executable: pip3.9
  loop:
  - cryptography
  - PyMySQL

- name: import mysql data
  community.mysql.mysql_db:
    state: import
    name: all
    login_user: root
    login_password: ExpenseApp@1
    login_host: mysql.pavancloud9.online
    target: /app/schema/backend.sql

- name: restart and daemon-reload
  ansible.builtin.systemd_service:
    daemon_reload: true
    state: restarted
    enabled: true
    name: backend.service